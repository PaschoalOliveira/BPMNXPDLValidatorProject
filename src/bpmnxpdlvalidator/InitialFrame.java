/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bpmnxpdlvalidator;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.Random;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;

/**
 *
 * @author Paschoal new Dell
 */
public class InitialFrame extends javax.swing.JFrame implements ActionListener, 
                                        PropertyChangeListener {

    /**
     * Creates new form InitialFrame
     */
    public InitialFrame() {
        initComponents();
        initProgressBar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnSelectXpdl = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFielCFCResult = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldThreesholdCFC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFielCMResult = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldThreesholdCM = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFielCCResult = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldThreesholdCC = new javax.swing.JTextField();
        jProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BPMNXPDL Validator");

        jBtnSelectXpdl.setLabel("Select  XPDL");
        jBtnSelectXpdl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSelectXpdlActionPerformed(evt);
            }
        });

        jLabel1.setText("XPDL File");

        jLabel2.setText("CFC Metric");

        jTextFielCFCResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielCFCResultActionPerformed(evt);
            }
        });

        jLabel3.setText("Threeshold Class");

        jTextFieldThreesholdCFC.setEnabled(false);
        jTextFieldThreesholdCFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldThreesholdCFCActionPerformed(evt);
            }
        });

        jLabel4.setText("CM Metric");

        jTextFielCMResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielCMResultActionPerformed(evt);
            }
        });

        jLabel5.setText("Threeshold Class");

        jTextFieldThreesholdCM.setEnabled(false);
        jTextFieldThreesholdCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldThreesholdCMActionPerformed(evt);
            }
        });

        jLabel6.setText("CC Metric");

        jTextFielCCResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielCCResultActionPerformed(evt);
            }
        });

        jLabel7.setText("Threeshold Class");

        jTextFieldThreesholdCC.setEnabled(false);
        jTextFieldThreesholdCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldThreesholdCCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFielCFCResult)
                                    .addComponent(jTextFielCMResult)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFielCCResult)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldThreesholdCC, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldThreesholdCFC, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldThreesholdCM, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBtnSelectXpdl)))
                        .addGap(3, 3, 3)))
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnSelectXpdl)
                    .addComponent(jLabel1))
                .addGap(55, 55, 55)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFielCFCResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldThreesholdCFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFielCMResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldThreesholdCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFielCCResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldThreesholdCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSelectXpdlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSelectXpdlActionPerformed
        
        /*
        setTask(new Task());
        getTask().addPropertyChangeListener(this);
        
        
        Runnable runner = new Runnable()
        {
            public void run() {
            //Your original code with the loop here.
                task.execute();
            }
        };
        Thread t = new Thread(runner, "Code Executer");
        t.start();
        */
        
        //task.execute();

        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        try{
            fileChooser.setCurrentDirectory(new File("C://Xpdl"));
        }catch(Exception e){
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        }
        
        
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try{
                File fSelectedXmlFile = fileChooser.getSelectedFile();
                DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                Document doc = dBuilder.parse(fSelectedXmlFile);
                doc.getDocumentElement().normalize();
                MetricCalculator metricCalculator = new MetricCalculator(doc,this);
                metricCalculator.calculateMetrics();
                
                
            }catch (Exception e) {
            	e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jBtnSelectXpdlActionPerformed

    private void jTextFielCFCResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielCFCResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFielCFCResultActionPerformed

    private void jTextFieldThreesholdCFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldThreesholdCFCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldThreesholdCFCActionPerformed

    private void jTextFielCMResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielCMResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFielCMResultActionPerformed

    private void jTextFieldThreesholdCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldThreesholdCMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldThreesholdCMActionPerformed

    private void jTextFielCCResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielCCResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFielCCResultActionPerformed

    private void jTextFieldThreesholdCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldThreesholdCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldThreesholdCCActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnSelectXpdl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JTextField jTextFielCCResult;
    private javax.swing.JTextField jTextFielCFCResult;
    private javax.swing.JTextField jTextFielCMResult;
    private javax.swing.JTextField jTextFieldThreesholdCC;
    private javax.swing.JTextField jTextFieldThreesholdCFC;
    private javax.swing.JTextField jTextFieldThreesholdCM;
    // End of variables declaration//GEN-END:variables
    private Task task;
    
    /**
     * @return the jTextFielCCResult
     */
    public javax.swing.JTextField getjTextFielCCResult() {
        return jTextFielCCResult;
    }

    /**
     * @param jTextFielCCResult the jTextFielCCResult to set
     */
    public void setjTextFielCCResult(javax.swing.JTextField jTextFielCCResult) {
        this.jTextFielCCResult = jTextFielCCResult;
    }

    /**
     * @return the jTextFielCFCResult
     */
    public javax.swing.JTextField getjTextFielCFCResult() {
        return jTextFielCFCResult;
    }

    /**
     * @param jTextFielCFCResult the jTextFielCFCResult to set
     */
    public void setjTextFielCFCResult(javax.swing.JTextField jTextFielCFCResult) {
        this.jTextFielCFCResult = jTextFielCFCResult;
    }

    /**
     * @return the jTextFielCMResult
     */
    public javax.swing.JTextField getjTextFielCMResult() {
        return jTextFielCMResult;
    }

    /**
     * @param jTextFielCMResult the jTextFielCMResult to set
     */
    public void setjTextFielCMResult(javax.swing.JTextField jTextFielCMResult) {
        this.jTextFielCMResult = jTextFielCMResult;
    }

    /**
     * @return the jTextFieldThreesholdCC
     */
    public javax.swing.JTextField getjTextFieldThreesholdCC() {
        return jTextFieldThreesholdCC;
    }

    /**
     * @param jTextFieldThreesholdCC the jTextFieldThreesholdCC to set
     */
    public void setjTextFieldThreesholdCC(javax.swing.JTextField jTextFieldThreesholdCC) {
        this.jTextFieldThreesholdCC = jTextFieldThreesholdCC;
    }

    /**
     * @return the jTextFieldThreesholdCFC
     */
    public javax.swing.JTextField getjTextFieldThreesholdCFC() {
        return jTextFieldThreesholdCFC;
    }

    /**
     * @param jTextFieldThreesholdCFC the jTextFieldThreesholdCFC to set
     */
    public void setjTextFieldThreesholdCFC(javax.swing.JTextField jTextFieldThreesholdCFC) {
        this.jTextFieldThreesholdCFC = jTextFieldThreesholdCFC;
    }

    /**
     * @return the jTextFieldThreesholdCM
     */
    public javax.swing.JTextField getjTextFieldThreesholdCM() {
        return jTextFieldThreesholdCM;
    }

    /**
     * @param jTextFieldThreesholdCM the jTextFieldThreesholdCM to set
     */
    public void setjTextFieldThreesholdCM(javax.swing.JTextField jTextFieldThreesholdCM) {
        this.jTextFieldThreesholdCM = jTextFieldThreesholdCM;
    }

    /**
     * @return the jProgressBar
     */
    public javax.swing.JProgressBar getjProgressBar() {
        return jProgressBar;
    }

    /**
     * @param jProgressBar the jProgressBar to set
     */
    public void setjProgressBar(javax.swing.JProgressBar jProgressBar) {
        this.jProgressBar = jProgressBar;
    }
    
    private void initProgressBar(){
        jProgressBar.setStringPainted(true);
        jProgressBar.setMaximum(100);
    }
    
    public static int progressBarValue;
    
    class Task extends SwingWorker<Void, Void> {
        /*
         * Main task. Executed in background thread.
         */
        @Override
        public Void doInBackground() {
            
            /*
            Runnable runner = new Runnable()
            {
                public void run() {
                    //Your original code with the loop here.
                    Random random = new Random();
                    try {
                        Thread.sleep(random.nextInt(1000));
                    } catch (InterruptedException ignore) {}
                    while (progressBarValue < 100) {
                        setProgress(progressBarValue);
                    }
                }
            };
            Thread t = new Thread(runner, "Code Executer");
            t.start();
            */
                        
            Random random = new Random();
            try {
                    Thread.sleep(random.nextInt(1000));
                } catch (InterruptedException ignore) {}
             while (progressBarValue < 100) {
                setProgress(progressBarValue);
             }
            
            
            
            
            /*
            Random random = new Random();
            int progress = 0;
            //Initialize progress property.
            setProgress(0);
            while (progress < 100) {
                //Sleep for up to one second.
                try {
                    Thread.sleep(random.nextInt(1000));
                } catch (InterruptedException ignore) {}
                //Make random progress.
                progress += random.nextInt(10);
                setProgress(Math.min(progress, 100));
            }
            */
            return null;
            
        }

        /*
         * Executed in event dispatching thread
         */
        @Override
        public void done() {
            //Toolkit.getDefaultToolkit().beep();
            //startButton.setEnabled(true);
            setCursor(null); //turn off the wait cursor
            //taskOutput.append("Done!\n");
            System.out.println("Done...");
        }
    }
    
    public void actionPerformed(ActionEvent evt) {
        //startButton.setEnabled(false);
        //setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //Instances of javax.swing.SwingWorker are not reusuable, so
        //we create new instances as needed.
        task = (new Task());
        task.addPropertyChangeListener(this);
        task.execute();
        
        /*
        JFileChooser fileChooser = new JFileChooser();
            try{
                fileChooser.setCurrentDirectory(new File("C://Xpdl"));
            }catch(Exception e){
                fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            }


            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                try{
                    File fSelectedXmlFile = fileChooser.getSelectedFile();
                    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                    DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                    Document doc = dBuilder.parse(fSelectedXmlFile);
                    doc.getDocumentElement().normalize();
                    MetricCalculator metricCalculator = new MetricCalculator(doc,this);
                    metricCalculator.calculateMetrics();

                    //task.execute();

                }catch (Exception e) {
                    e.printStackTrace();
                }
            }
        */
    }
    
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress" == evt.getPropertyName()) {
            int progress = (Integer) evt.getNewValue();
            jProgressBar.setValue(progress);
            //taskOutput.append(String.format("Completed %d%% of task.\n", task.getProgress()));
        } 
    }
    /*
    public void atualizarProgressBar(int x){
        
        getTask().execute();
        
        SwingWorker worker = new SwingWorker() {
                            @Override
                            protected Object doInBackground() throws Exception {
                                
                                //jProgressBar.setIndeterminate(true);
                                //for (int x = 0; x <= jProgressBar.getMaximum(); x++) {
                                    jProgressBar.setValue(x);
                                    Thread.sleep(200);
                                //}
                                return null;
                            }
                            protected void done() {
                                //barra.setValue(0);  
                                System.out.println("Done...");
                            }
                        };
                        worker.execute();
    }
    */
    
    /**
     * @return the task
     */
    public Task getTask() {
        return task;
    }

    /**
     * @param task the task to set
     */
    public void setTask(Task task) {
        this.task = task;
    }
    
}
